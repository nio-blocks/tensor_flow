{
  "nio/MNISTImageLoader": {
    "version": "0.1.0",
    "description": "Each signal processed loads the next `batch_size` images from the dataset corresponding to `input_id`. Output is a rank-two tensor with shape (`batch_size`, 784), ready to be used by a TensorFlow block.",
    "categories": [
      "Machine Learning"
    ],
    "properties": {
      "batch_size": {
        "title": "Images per Batch",
        "type": "IntType",
        "description": "Number of images and labels per batch",
        "default": 100
      },
      "shuffle": {
        "title": "Shuffle Batch",
        "type": "BoolType",
        "description": "Randomize the order of each batch",
        "default": true
      },
      "validation_size": {
        "title": "Validation Size",
        "type": "IntType",
        "description": "Number of images and labels to reserve from training data for cross-validation.",
        "default": 0
      }
    },
    "inputs": {
      "test": {
        "description": "Load `batch_size` images from testing dataset"
      },
      "train": {
        "description": "Load `batch_size` images from training dataset"
      }
    },
    "outputs": {
      "default": {
        "description": ""
      }
    },
    "commands": {}
  },
  "nio/TensorFlow": {
    "version": "0.3.0",
    "description": "Accepts rank-two input tensors, each is fed-forward through a configured aritifial neural network, which predicts values for each of its outputs. Training and testing data will be compared to their empirical labels and evaluated for accuracy and loss, as defined by the user. During training weights are updated through back-propogration, according to the optimizer selected.",
    "categories": [
      "Machine Learning"
    ],
    "properties": {
      "enrich": {
        "title": "Signal Enrichment",
        "type": "ObjectType",
        "description": "",
        "default": {
          "enrich_field": "",
          "exclude_existing": true
        }
      },
      "layers": {
        "title": "Network Layers",
        "type": "ListType",
        "description": "Define one or more network layers with the specified number of neurons, a bias unit if selected, an activation function, and initial weight values. Each layer's input is the layer before it (or input data, in the case of the first layer).",
        "default": [
          {
            "activation": "softmax",
            "bias": true,
            "count": 10,
            "initial_weights": "random"
          }
        ]
      },
      "network_config": {
        "title": "ANN Configuration",
        "type": "ObjectType",
        "description": "Parameters of the artifical neural network. Dropout is only used if one or more dropout layers are configured in the network.",
        "default": {
          "learning_rate": 0.005,
          "optimizer": "GradientDescentOptimizer",
          "random_seed": 0,
          "loss": "cross_entropy",
          "dropout": 0,
          "input_dim": 784
        }
      }
    },
    "inputs": {
      "predict": {
        "description": "Create new predictions for un-labeled input tensor."
      },
      "test": {
        "description": "Compare predictions for input tensor to labels, return accuracy and loss."
      },
      "train": {
        "description": "Compare predictions for input tensor to labels, return accuracy and loss, and optimze weights."
      }
    },
    "outputs": {
      "default": {
        "description": ""
      }
    },
    "commands": {}
  }
}